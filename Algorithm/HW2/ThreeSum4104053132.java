import java.util.Arrays;
public class ThreeSum4104053132 extends ThreeSum{
	
	public static void main(String[] arg)
	{
		double time1, time2;
		time1 = System.currentTimeMillis();
		int [] a={-3968, 1174, 3581, -2318, -3423, -4337, 791, 3554, 1261, 4971, 3536, -3650, 3568, 670, -417, 896, 3657, 1930, -2285, 2529, -4631, -48, 4891, 2956, 898, 1090, -94, 4755, -4634, -4201, 897, 548, -4021, -3540, -181, -3195, 1897, -3205, 858, 3400, 1384, 1391, -1157, -2488, 2104, 88, 3943, -992, -4794, 479, -2503, 556, -3869, -1457, 970, 1029, -4938, 1222, -4075, -2608, 4417, -2717, -4690, 1699, 1227, 2931, 1008, 513, -3310, -3774, -223, 3274, -801, 4555, -3428, -1598, 2819, -2149, 4784, -346, 2569, -2928, 777, -2421, 1370, 4238, -2763, -4642, 414, 4367, 4871, 3517, -3662, -717, -4144, -3018, -4281, 2043, 583, 2310, -2767, -301, -4004, -4218, 4844, -4998, -4091, 3455, -4811, 909, 129, -873, -102, -246, 3584, 82, 2991, 2370, -1749, 2480, -4547, -4518, -83, -866, 1135, 1859, -2801, -3164, 4737, -2843, -2544, 1507, -2233, -4265, -1832, 71, -2305, -4360, -4294, 1171, -2151, -4227, 4681, 3804, -1728, 4164, -4128, -3969, 3457, -1494, 3066, -2447, -385, -3165, 1456, 653, 3505, 348, -4351, 2181, -245, -4695, -3836, -2237, -4536, 1666, -4957, -2054, 2690, -3241, 1011, -81, -1661, -2391, -25, 2935, -3303, 164, 2780, 4098, 2794, -961, 382, 2128, -1150, -105, -3340, -118, -3409, 975, 338, 40, 2765, 700, 1202, 2756, -1600, 4135, 4146, -1931, 1186, -2594, 4904, -2350, 3535, 3945, 766, -862, 1196, -3762, 4706, -4210, 1753, 4154, -2247, -2243, -2271, -3383, 590, 4491, 4126, -1227, -3616, 2234, -1203, -1416, -1919, 3264, -2296, 231, -1789, -4403, -2837, 637, -1603, 1598, -1839, 2449, -4826, -1439, 1465, -585, -4008, 4153, 565, -4442, -191, 2545, 1232, 773, -3972, -737, -956, -3761, 113, 4361, 3489, 496, -1886, -4865, 1282, 3445, 2252, 1578, 4781, -4137, -2206, 2221, 1793, 2134, 4089, 2354, -1853, -362, 3185, 2066, 2280, 949, 2715, 119, -2733, -3557, -4560, 1301, -1040, -1291, 3613, -4510, 2999, -3918, 4133, -2100, -3283, 3557, -2552, -1725, -4256, 334, -1782, 287, -4355, -2918, 1868, -5000, 641, -2610, 2553, -2880, -4825, 4444, 4302, 3654, -481, 639, -3420, -3808, 1979, -1208, -2152, -3594, 174, 1230, -2516, -739, -1120, -4958, 1520, 3069, -3306, 44, 910, -3102, 900, 4564, -1425, 123, 1285, 1382, -3168, 838, 1182, 1565, -3344, 3507, 3214, 681, 26, -229, -2519, -1419, 494, -626, -453, -895, -413, 2061, -4169, -706, 2970, 4751, -3707, 166, 4359, 218, 1701, -4612, -1857, -1760, 2849, 1300, 1493, 4258, 2476, 3606, 1283, -3861, -465, 1803, 1733, -1444, -4266, 3422, 1188, -4847, 4821, -3531, 740, 1215, 4116, 2057, 2067, 1265, -161, 1709, 2564, 3669, -30, -1200, -1388, -4155, -2035, 4493, -878, 524, 2437, 2831, -3197, 3125, 3634, -2162, 550, 4454, 4158, 4797, -3392, -2089, -403, -3459, 5, 2660, 4806, 2710, 2052, 3989, -2989, 1398, -1942, -624, 4107, -47, 2276, 3017, 763, -3419, 4508, 1783, 2214, -4551, -2811, 3029, 4632, -4635, -2674, 3043, 1794, 1192, -3978, 1184, -4080, -3781, -2930, -4273, 545, -1158, -3387, -4200, 1831, -966, -3497, -3547, -4805, 2709, -4340, -1802, 3200, 4439, -3250, -2510, -387, -1595, -2347, 1124, 2933, -756, -2496, -3844, -799, 3899, 343, -2369, 3306, 21, 718, 4392, -2097, -2738, -559, -3019, 9, 1411, -3532, -1696, 4148, 2387, 1446, 4879, 3430, 2576, -3802, -1675
		};
		ThreeSum4104053132 A=new ThreeSum4104053132(); 
		System.out.println(A.count(a));
		time2 = System.currentTimeMillis();
		System.out.println("花了：" + (time2-time1)/1000 + "秒");
	}
	
	@Override
	public int count(int[] a) {
	int results = 0;
        int l=a.length;
        if (a == null || l < 3) {
            return results;
        }
        
        Arrays.sort(a);
        int left;
        int right = l - 1;
        int target;
        int i,t;
       
        if(a[l/2]<0)
        {
        	for(i=0;i<Math.ceil((float)l/2);i++)
        	{
        		t=-a[i];
        		a[i]=-a[l-i-1];
        		a[l-i-1]=t;
        	}
        	
        }
       
        for (i = 0; i < l - 2; i++) {
            // skip duplicate triples with the same first numebr
        	if(a[i]>0)
        	{
        		break;
        	}
            if (i > 0 && a[i] == a[i - 1]) {
                continue;
            }
           
           left = i + 1;
           target = -a[i];
           
            results=twoSum(a, left, right, target,results);
        }
        
        return results;
		
	}
	public int twoSum(int[] nums,int left,int right,int target,int results) {
		while (left < right) {
			if (nums[left] + nums[right] == target) {
				results++;
				left++;
				right--;
				// skip duplicate pairs with the same left
				while (left < right && nums[left] == nums[left - 1]) {
					left++;
				}
				// skip duplicate pairs with the same right
				while (left < right && nums[right] == nums[right + 1]) {
					right--;
				}
			} 
			else if (nums[left] + nums[right] < target) {
				left++;
			} 
			else {
				right--;
			}
		}
		return results;
	}

}
